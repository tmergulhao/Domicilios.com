//
//  StyleKit.m
//  Domicilios.com
//
//  Created by Tiago Mergulhão on 11/10/16.
//  Copyright (c) 2016 Tiago Mergulhão. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "StyleKit.h"


@implementation StyleKit

#pragma mark Cache

static UIColor* _red = nil;

static UIImage* _imageOfDeliveries = nil;
static UIImage* _imageOfLocation = nil;
static UIImage* _imageOfListView = nil;
static UIImage* _imageOfMapPlaceholder = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _red = [UIColor colorWithRed: 0.812 green: 0.008 blue: 0.008 alpha: 1];

}

#pragma mark Colors

+ (UIColor*)red { return _red; }

#pragma mark Drawing Methods

+ (void)drawDeliveries
{

    //// path0_fill Drawing
    UIBezierPath* path0_fillPath = [UIBezierPath bezierPath];
    [path0_fillPath moveToPoint: CGPointMake(16.97, 6)];
    [path0_fillPath addCurveToPoint: CGPointMake(17, 5.66) controlPoint1: CGPointMake(16.99, 5.89) controlPoint2: CGPointMake(17, 5.77)];
    [path0_fillPath addCurveToPoint: CGPointMake(14, 3) controlPoint1: CGPointMake(17, 4.19) controlPoint2: CGPointMake(15.66, 3)];
    [path0_fillPath addCurveToPoint: CGPointMake(11, 5.66) controlPoint1: CGPointMake(12.34, 3) controlPoint2: CGPointMake(11, 4.19)];
    [path0_fillPath addCurveToPoint: CGPointMake(11.02, 6) controlPoint1: CGPointMake(11, 5.77) controlPoint2: CGPointMake(11.01, 5.89)];
    [path0_fillPath addCurveToPoint: CGPointMake(14, 5.85) controlPoint1: CGPointMake(11.94, 5.9) controlPoint2: CGPointMake(12.94, 5.85)];
    [path0_fillPath addCurveToPoint: CGPointMake(16.97, 6) controlPoint1: CGPointMake(15.06, 5.85) controlPoint2: CGPointMake(16.05, 5.9)];
    [path0_fillPath closePath];
    [path0_fillPath moveToPoint: CGPointMake(24.24, 19.85)];
    [path0_fillPath addCurveToPoint: CGPointMake(25.96, 22.8) controlPoint1: CGPointMake(26.43, 21.22) controlPoint2: CGPointMake(25.96, 22.8)];
    [path0_fillPath addCurveToPoint: CGPointMake(13.4, 25) controlPoint1: CGPointMake(25.96, 22.8) controlPoint2: CGPointMake(21.02, 25)];
    [path0_fillPath addCurveToPoint: CGPointMake(2.04, 22.8) controlPoint1: CGPointMake(5.79, 25) controlPoint2: CGPointMake(2.04, 22.8)];
    [path0_fillPath addCurveToPoint: CGPointMake(3.76, 19.85) controlPoint1: CGPointMake(2.04, 22.8) controlPoint2: CGPointMake(1.57, 21.22)];
    [path0_fillPath addCurveToPoint: CGPointMake(14, 22.03) controlPoint1: CGPointMake(6.57, 21.21) controlPoint2: CGPointMake(10.13, 22.03)];
    [path0_fillPath addCurveToPoint: CGPointMake(24.24, 19.85) controlPoint1: CGPointMake(17.87, 22.03) controlPoint2: CGPointMake(21.43, 21.21)];
    [path0_fillPath closePath];
    [path0_fillPath moveToPoint: CGPointMake(23.45, 17.18)];
    [path0_fillPath addCurveToPoint: CGPointMake(23.45, 17.51) controlPoint1: CGPointMake(23.45, 17.29) controlPoint2: CGPointMake(23.45, 17.4)];
    [path0_fillPath addCurveToPoint: CGPointMake(13.89, 19.73) controlPoint1: CGPointMake(21.01, 18.88) controlPoint2: CGPointMake(17.63, 19.73)];
    [path0_fillPath addCurveToPoint: CGPointMake(4.56, 17.62) controlPoint1: CGPointMake(10.27, 19.73) controlPoint2: CGPointMake(6.97, 18.93)];
    [path0_fillPath addCurveToPoint: CGPointMake(4.55, 17.18) controlPoint1: CGPointMake(4.55, 17.48) controlPoint2: CGPointMake(4.55, 17.33)];
    [path0_fillPath addCurveToPoint: CGPointMake(14, 7.84) controlPoint1: CGPointMake(4.55, 12.02) controlPoint2: CGPointMake(8.78, 7.84)];
    [path0_fillPath addCurveToPoint: CGPointMake(23.45, 17.18) controlPoint1: CGPointMake(19.22, 7.84) controlPoint2: CGPointMake(23.45, 12.02)];
    [path0_fillPath closePath];
    path0_fillPath.miterLimit = 4;

    path0_fillPath.usesEvenOddFillRule = YES;

    [UIColor.whiteColor setFill];
    [path0_fillPath fill];
}

+ (void)drawLocation
{

    //// Bezier Drawing
    UIBezierPath* bezierPath = [UIBezierPath bezierPath];
    [bezierPath moveToPoint: CGPointMake(13, 25)];
    [bezierPath addLineToPoint: CGPointMake(13, 14)];
    [bezierPath addLineToPoint: CGPointMake(2, 14)];
    [bezierPath addLineToPoint: CGPointMake(24, 3)];
    [bezierPath addLineToPoint: CGPointMake(13, 25)];
    [bezierPath closePath];
    [UIColor.whiteColor setFill];
    [bezierPath fill];
}

+ (void)drawListView
{

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(4, 7, 3, 3)];
    [UIColor.whiteColor setFill];
    [rectanglePath fill];


    //// Rectangle 2 Drawing
    UIBezierPath* rectangle2Path = [UIBezierPath bezierPathWithRect: CGRectMake(4, 13, 3, 3)];
    [UIColor.whiteColor setFill];
    [rectangle2Path fill];


    //// Rectangle 3 Drawing
    UIBezierPath* rectangle3Path = [UIBezierPath bezierPathWithRect: CGRectMake(4, 19, 3, 3)];
    [UIColor.whiteColor setFill];
    [rectangle3Path fill];


    //// Rectangle 4 Drawing
    UIBezierPath* rectangle4Path = [UIBezierPath bezierPathWithRect: CGRectMake(9, 8, 15, 1)];
    [UIColor.whiteColor setFill];
    [rectangle4Path fill];


    //// Rectangle 5 Drawing
    UIBezierPath* rectangle5Path = [UIBezierPath bezierPathWithRect: CGRectMake(9, 14, 15, 1)];
    [UIColor.whiteColor setFill];
    [rectangle5Path fill];


    //// Rectangle 6 Drawing
    UIBezierPath* rectangle6Path = [UIBezierPath bezierPathWithRect: CGRectMake(9, 20, 15, 1)];
    [UIColor.whiteColor setFill];
    [rectangle6Path fill];
}

+ (void)drawMapPlaceholder
{

    //// Oval 2 Drawing
    UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(1, 1, 38, 38)];
    [StyleKit.red setStroke];
    oval2Path.lineWidth = 2;
    [oval2Path stroke];


    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(4, 4, 32, 32)];
    [StyleKit.red setFill];
    [ovalPath fill];


    //// path0_fill Drawing
    UIBezierPath* path0_fillPath = [UIBezierPath bezierPath];
    [path0_fillPath moveToPoint: CGPointMake(22.97, 11)];
    [path0_fillPath addCurveToPoint: CGPointMake(23, 10.66) controlPoint1: CGPointMake(22.99, 10.89) controlPoint2: CGPointMake(23, 10.77)];
    [path0_fillPath addCurveToPoint: CGPointMake(20, 8) controlPoint1: CGPointMake(23, 9.19) controlPoint2: CGPointMake(21.66, 8)];
    [path0_fillPath addCurveToPoint: CGPointMake(17, 10.66) controlPoint1: CGPointMake(18.34, 8) controlPoint2: CGPointMake(17, 9.19)];
    [path0_fillPath addCurveToPoint: CGPointMake(17.02, 11) controlPoint1: CGPointMake(17, 10.77) controlPoint2: CGPointMake(17.01, 10.89)];
    [path0_fillPath addCurveToPoint: CGPointMake(20, 10.85) controlPoint1: CGPointMake(17.94, 10.9) controlPoint2: CGPointMake(18.94, 10.85)];
    [path0_fillPath addCurveToPoint: CGPointMake(22.97, 11) controlPoint1: CGPointMake(21.06, 10.85) controlPoint2: CGPointMake(22.05, 10.9)];
    [path0_fillPath closePath];
    [path0_fillPath moveToPoint: CGPointMake(30.24, 24.85)];
    [path0_fillPath addCurveToPoint: CGPointMake(31.96, 27.8) controlPoint1: CGPointMake(32.43, 26.22) controlPoint2: CGPointMake(31.96, 27.8)];
    [path0_fillPath addCurveToPoint: CGPointMake(19.4, 30) controlPoint1: CGPointMake(31.96, 27.8) controlPoint2: CGPointMake(27.02, 30)];
    [path0_fillPath addCurveToPoint: CGPointMake(8.04, 27.8) controlPoint1: CGPointMake(11.79, 30) controlPoint2: CGPointMake(8.04, 27.8)];
    [path0_fillPath addCurveToPoint: CGPointMake(9.76, 24.85) controlPoint1: CGPointMake(8.04, 27.8) controlPoint2: CGPointMake(7.57, 26.22)];
    [path0_fillPath addCurveToPoint: CGPointMake(20, 27.03) controlPoint1: CGPointMake(12.57, 26.21) controlPoint2: CGPointMake(16.13, 27.03)];
    [path0_fillPath addCurveToPoint: CGPointMake(30.24, 24.85) controlPoint1: CGPointMake(23.87, 27.03) controlPoint2: CGPointMake(27.43, 26.21)];
    [path0_fillPath closePath];
    [path0_fillPath moveToPoint: CGPointMake(29.45, 22.18)];
    [path0_fillPath addCurveToPoint: CGPointMake(29.45, 22.51) controlPoint1: CGPointMake(29.45, 22.29) controlPoint2: CGPointMake(29.45, 22.4)];
    [path0_fillPath addCurveToPoint: CGPointMake(19.89, 24.73) controlPoint1: CGPointMake(27.01, 23.88) controlPoint2: CGPointMake(23.63, 24.73)];
    [path0_fillPath addCurveToPoint: CGPointMake(10.56, 22.62) controlPoint1: CGPointMake(16.27, 24.73) controlPoint2: CGPointMake(12.97, 23.93)];
    [path0_fillPath addCurveToPoint: CGPointMake(10.55, 22.18) controlPoint1: CGPointMake(10.55, 22.48) controlPoint2: CGPointMake(10.55, 22.33)];
    [path0_fillPath addCurveToPoint: CGPointMake(20, 12.84) controlPoint1: CGPointMake(10.55, 17.02) controlPoint2: CGPointMake(14.78, 12.84)];
    [path0_fillPath addCurveToPoint: CGPointMake(29.45, 22.18) controlPoint1: CGPointMake(25.22, 12.84) controlPoint2: CGPointMake(29.45, 17.02)];
    [path0_fillPath closePath];
    path0_fillPath.miterLimit = 4;

    path0_fillPath.usesEvenOddFillRule = YES;

    [UIColor.whiteColor setFill];
    [path0_fillPath fill];
}

#pragma mark Generated Images

+ (UIImage*)imageOfDeliveries
{
    if (_imageOfDeliveries)
        return _imageOfDeliveries;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(28, 28), NO, 0.0f);
    [StyleKit drawDeliveries];

    _imageOfDeliveries = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfDeliveries;
}

+ (UIImage*)imageOfLocation
{
    if (_imageOfLocation)
        return _imageOfLocation;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(28, 28), NO, 0.0f);
    [StyleKit drawLocation];

    _imageOfLocation = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfLocation;
}

+ (UIImage*)imageOfListView
{
    if (_imageOfListView)
        return _imageOfListView;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(28, 28), NO, 0.0f);
    [StyleKit drawListView];

    _imageOfListView = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfListView;
}

+ (UIImage*)imageOfMapPlaceholder
{
    if (_imageOfMapPlaceholder)
        return _imageOfMapPlaceholder;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(40, 40), NO, 0.0f);
    [StyleKit drawMapPlaceholder];

    _imageOfMapPlaceholder = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfMapPlaceholder;
}

#pragma mark Customization Infrastructure

- (void)setDeliveriesTargets: (NSArray*)deliveriesTargets
{
    _deliveriesTargets = deliveriesTargets;

    for (id target in self.deliveriesTargets)
        [target performSelector: @selector(setImage:) withObject: StyleKit.imageOfDeliveries];
}

- (void)setLocationTargets: (NSArray*)locationTargets
{
    _locationTargets = locationTargets;

    for (id target in self.locationTargets)
        [target performSelector: @selector(setImage:) withObject: StyleKit.imageOfLocation];
}

- (void)setListViewTargets: (NSArray*)listViewTargets
{
    _listViewTargets = listViewTargets;

    for (id target in self.listViewTargets)
        [target performSelector: @selector(setImage:) withObject: StyleKit.imageOfListView];
}

- (void)setMapPlaceholderTargets: (NSArray*)mapPlaceholderTargets
{
    _mapPlaceholderTargets = mapPlaceholderTargets;

    for (id target in self.mapPlaceholderTargets)
        [target performSelector: @selector(setImage:) withObject: StyleKit.imageOfMapPlaceholder];
}


@end
